<?php

/**
 * @file
 * Provides functionality to add theme suggestions and pass variables.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
function bootstrap_subtheme_preprocess_html(&$variables) {
  // Get current node url.
  $node_url = \Drupal::request()->getRequestUri();
  // Check whether the node url is of required node or not.
  if ($node_url === '/custom-render') {
    $variables['attributes']['class'][] = 'custom-render';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bootstrap_subtheme_preprocess_node(&$variables) {
  $node_url = $variables['url'];
  // Check whether the node url is of required node or not.
  if ($node_url === '/custom-render') {
    $colors = [
      'color1' => 'red',
      'color2' => 'green',
      'color3' => 'blue',
    ];
    $variables['colors'] = $colors;
    $variables['#attached']['library'][] = 'bootstrap_subtheme/custom-render';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
*/
function bootstrap_subtheme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  // Get current node url.
  $node_url = $variables['elements']['#node']->toUrl()->toString();
  // Check whether the node url is of required node or not.
  if ($node_url === '/custom-render') {
    $suggestions[] = 'node__custom_render';
  }
}
